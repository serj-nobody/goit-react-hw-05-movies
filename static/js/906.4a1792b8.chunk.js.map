{"version":3,"file":"static/js/906.4a1792b8.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/pages/MoviesPage/MoviesPage.module.css?7ea7","pages/MoviesPage/MoviesPage.jsx","shared/api/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MoviesPage_container__jgAeo\",\"title\":\"MoviesPage_title__Coe7O\",\"form\":\"MoviesPage_form__2deBf\",\"input\":\"MoviesPage_input__16dJ5\",\"button\":\"MoviesPage_button__AUtxX\",\"movieList\":\"MoviesPage_movieList__b4qVb\",\"movieItem\":\"MoviesPage_movieItem__vjzDU\",\"movieLink\":\"MoviesPage_movieLink__gLIKU\",\"moviePoster\":\"MoviesPage_moviePoster__AEiyw\",\"movieTitle\":\"MoviesPage_movieTitle__o-ghW\",\"loading\":\"MoviesPage_loading__+eW3h\"};","import { useState, useEffect } from \"react\";\nimport { Link, useSearchParams, useLocation } from \"react-router-dom\";\n\nimport { searchMovies } from \"shared/api/api\";\n\nimport css from './MoviesPage.module.css';\n\n\n\nconst MoviesPage = () => {\n  const [inputValue, setInputValue] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query');\n\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      setLoading(true);\n\n      try {\n        const { results } = await searchMovies(searchQuery);\n        setMovies(results);\n      } catch (error) {\n        setError(error);\n      }\n      finally {\n        setLoading(false);\n      }\n    };\n\n    if (searchQuery) {\n      fetchMovies();\n    }\n  }, [searchQuery]);\n\n  const handleChange = (event) => {\n    const { value } = event.target;\n    setInputValue(value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setSearchParams({ query: inputValue });\n    setInputValue('');\n  };\n\n  const moviesList = movies.map(({ id, poster_path, title }) => (\n    <li key={id} className={css.movieItem}>\n      <Link state={{from: location}} className={css.movieLink} to={`/movies/${id}`}>\n        <img className={css.moviePoster} src={poster_path ? `https://image.tmdb.org/t/p/w500${poster_path}` : 'https://qqcinema.com/wp-content/uploads/no-poster.png'} alt=\"\" />\n        <p className={css.movieTitle}>{title}</p>\n      </Link>\n    </li>\n  ));\n\n  return (\n    <div className={css.container}>\n      <h2 className={css.title}>Movies search</h2>\n      <form className={css.form} onSubmit={handleSubmit}>\n        <input className={css.input} value={inputValue} onChange={handleChange} placeholder='Enter keyword...' required />\n        <button className={css.button} type='submit'>Search</button>\n      </form>\n      <ul className={css.movieList}>\n        {movies && moviesList}\n      </ul>\n      {loading && <p className={css.loading}>...loading movies</p>}\n      {error && <p>Oops! Loading movies failed due to an error</p>}\n    </div>\n  );\n}\n\nexport default MoviesPage;","import axios from \"axios\";\n\nconst API_KEY = '55f4870ea098f37a25ead3578c555cbf';\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day', {\n    params: {\n      page: 1,\n    }\n  });\n  return data;\n};\n\nexport const getMovieDetails = async (id) => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getMovieCast = async (id) => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const getMovieReviews = async (id) => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data;\n};\n\nexport const searchMovies = async (searchQuery) => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query: searchQuery,\n      page: 1,\n    }\n  });\n  return data;\n};"],"names":["useState","inputValue","setInputValue","movies","setMovies","loading","setLoading","error","setError","useSearchParams","searchParams","setSearchParams","searchQuery","get","location","useLocation","useEffect","fetchMovies","searchMovies","results","moviesList","map","id","poster_path","title","className","css","state","from","to","src","alt","onSubmit","event","preventDefault","query","value","onChange","target","placeholder","required","type","instance","axios","baseURL","params","api_key","getTrendingMovies","page","data","getMovieDetails","getMovieCast","getMovieReviews"],"sourceRoot":""}