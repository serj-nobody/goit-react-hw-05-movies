{"version":3,"file":"static/js/346.9eeb8d94.chunk.js","mappings":"2PACA,GAAgB,UAAY,+BAA+B,WAAa,gCAAgC,KAAO,0BAA0B,QAAU,8B,SCiDnJ,EAzCoB,WAClB,OAAwCA,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEQC,GAAOC,EAAAA,EAAAA,MAAPD,IAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,6FACxBN,GAAW,GADa,mBAIIO,EAAAA,EAAAA,IAAgBJ,GAJpB,gBAIdK,EAJc,EAIdA,QACRV,EAAgBU,GALM,gDAOtBN,EAAS,EAAD,IAPc,yBAUtBF,GAAW,GAVW,4EAAH,qDAcvBM,GACD,GAAE,CAACH,IAEJ,IAAMM,EAAmBZ,EAAaa,KAAI,gBAAGP,EAAH,EAAGA,GAAIQ,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACxC,gBAAIC,UAAWC,EAAAA,WAAf,WACE,eAAID,UAAWC,EAAAA,KAAf,SAA0BH,KAC1B,uBAAIC,MAF8BT,EADI,IAO1C,OACE,iBAAKU,UAAWC,EAAAA,UAAhB,WACE,eAAID,UAAWC,EAAAA,SAAf,SAA8BL,IAC7BV,IAAW,cAAGc,UAAWC,EAAAA,QAAd,wBACXb,IAAS,kEAGf,C,kMC7CKc,E,MAAWC,GAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAJY,sCAQHC,EAAiB,mCAAG,sGACRL,EAASM,IAAI,sBAAuB,CACzDH,OAAQ,CACNI,KAAM,KAHqB,uBACvBC,EADuB,EACvBA,KADuB,kBAMxBA,GANwB,2CAAH,qDASjBC,EAAe,mCAAG,WAAOrB,GAAP,yFACNY,EAASM,IAAT,iBAAuBlB,IADjB,uBACrBoB,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfE,EAAY,mCAAG,WAAOtB,GAAP,yFACHY,EAASM,IAAT,iBAAuBlB,EAAvB,aADG,uBAClBoB,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZhB,EAAe,mCAAG,WAAOJ,GAAP,yFACNY,EAASM,IAAT,iBAAuBlB,EAAvB,aADM,uBACrBoB,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfG,EAAY,mCAAG,WAAOC,GAAP,yFACHZ,EAASM,IAAI,gBAAiB,CACnDH,OAAQ,CACNU,MAAOD,EACPL,KAAM,KAJgB,uBAClBC,EADkB,EAClBA,KADkB,kBAOnBA,GAPmB,2CAAH,qD","sources":["webpack://react-homework-template/./src/pages/ReviewsPage/ReviewsPage.module.css?3ad9","pages/ReviewsPage/ReviewsPage.jsx","shared/api/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ReviewsPage_container__YnmPG\",\"reviewItem\":\"ReviewsPage_reviewItem__kez-t\",\"name\":\"ReviewsPage_name__NCu2J\",\"loading\":\"ReviewsPage_loading__Uij8T\"};","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport { getMovieReviews } from \"shared/api/api\";\n\nimport css from './ReviewsPage.module.css';\n\n\n\nconst ReviewsPage = () => {\n  const [movieReviews, setMovieReviews] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchMovieReviews = async () => {\n      setLoading(true);\n\n      try {\n        const { results } = await getMovieReviews(id);\n        setMovieReviews(results);\n      } catch (error) {\n        setError(error);\n      }\n      finally {\n        setLoading(false);\n      }\n    };\n\n    fetchMovieReviews();\n  }, [id]);\n\n  const movieReviewsList = movieReviews.map(({ id, author, content }) => (\n    <li className={css.reviewItem} key={id}>\n      <h2 className={css.name}>{author}</h2>\n      <p>{content}</p>\n    </li>\n  ));\n  \n  return (\n    <div className={css.container}>\n      <ul className={css.castList}>{movieReviewsList}</ul>\n      {loading && <p className={css.loading}>...loading</p>}\n      {error && <p>Oops! Loading failed due to an error</p>}\n    </div>\n  );\n}\n\nexport default ReviewsPage;","import axios from \"axios\";\n\nconst API_KEY = '55f4870ea098f37a25ead3578c555cbf';\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day', {\n    params: {\n      page: 1,\n    }\n  });\n  return data;\n};\n\nexport const getMovieDetails = async (id) => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getMovieCast = async (id) => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const getMovieReviews = async (id) => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data;\n};\n\nexport const searchMovies = async (searchQuery) => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query: searchQuery,\n      page: 1,\n    }\n  });\n  return data;\n};"],"names":["useState","movieReviews","setMovieReviews","loading","setLoading","error","setError","id","useParams","useEffect","fetchMovieReviews","getMovieReviews","results","movieReviewsList","map","author","content","className","css","instance","axios","baseURL","params","api_key","getTrendingMovies","get","page","data","getMovieDetails","getMovieCast","searchMovies","searchQuery","query"],"sourceRoot":""}